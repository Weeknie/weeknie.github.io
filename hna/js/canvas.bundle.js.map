{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/canvas.js","webpack:///./src/js/circle.js","webpack:///./src/js/constants.js","webpack:///./src/js/utils/poissonDisc.js","webpack:///./src/js/utils/randomScale.js"],"names":["console","log","stepAnimation","runAnimation","constants","initialRunAnimation","restartSimulationHandle","restartingSimulation","canvas","document","querySelector","context","getContext","width","window","innerWidth","height","innerHeight","addEventListener","init","event","code","brownianAmplitude","brownianAmplitudeChangePerPress","circles","clearTimeout","clearRect","spawnMode","k","dimensions","myPoisson","PoissonDisc","padding","placementRadius","run","points","map","point","hue","Math","round","random","Circle","px","py","groupNumber","floor","push","forEach","circle","draw","previousFrameTime","animate","time","requestAnimationFrame","deltaTime","simulationSpeed","calculateNewPosition","update","every","isInert","restartSimulation","restartMode","setTimeout","x","y","canvasWidth","canvasHeight","radius","circleRadius","color","speed","deleted","beginPath","arc","PI","fillStyle","fill","closePath","accelerationFromCircles","filter","calculateAccelerationFromCircle","reduce","acc","item","accelerationFromBorder","calculateRepulsionFromBorder","brownianX","randomScale","brownianY","friction","newX","newY","sqrt","inertThreshold","repulsion","calculateRepulsionFromCircle","attraction","calculateAttractionToCircle","direction","calculateDirectionToCircle","deltaX","deltaY","distance","calculateDistanceToCircle","acceleration","calculateRepulsionFromDistance","max","min","exp","repulsionScale","repulsionAmplitude","deltaHue","abs","deltaHueFactor","groupingIntensity","attractionFactor","attractionXOffset","attractionScale","attractionAmplitude","attractionYOffset","w","h","r","n","cellSize","cols","rows","active","grid","reset","initialiseGrid","addPoint","getRandom","length","step","l","randomActive","currentPoint","foundNewPoint","tries","pointValid","newAngle","newDist","offsetX","cos","offsetY","sin","newGridX","newGridY","i","j","neighbourGridX","neighbourGridY","neighbourIndex","neighbour","dist","splice","parseInt","gx","gy","pointIndex"],"mappings":"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","file":"./js/canvas.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/canvas.js\");\n","import constants from \"./constants\"\n\nimport Circle from \"./circle\"\nimport PoissonDisc from \"./utils/poissonDisc\"\n\nconsole.log(\"Version 0.4\")\n\nlet stepAnimation = false;\nlet runAnimation = constants.initialRunAnimation;\nlet restartSimulationHandle;\nlet restartingSimulation = false;\n\nconst canvas = document.querySelector(\"canvas\")\nconst context = canvas.getContext(\"2d\")\n\ncanvas.width = window.innerWidth\ncanvas.height = window.innerHeight\n\naddEventListener(\"resize\", () => {\n  canvas.width = window.innerWidth\n  canvas.height = window.innerHeight\n\n  init()\n})\n\naddEventListener(\"keypress\", (event) => {\n  switch (event.code) {\n  case \"Space\":\n    stepAnimation = true\n    break;\n  case \"KeyP\":\n    runAnimation = !runAnimation;\n    break;\n  case \"KeyR\":\n    init();\n    break;\n  case \"Equal\":\n    constants.brownianAmplitude += constants.brownianAmplitudeChangePerPress;\n    console.log(constants.brownianAmplitude);\n    break;\n  case \"Minus\":\n    if (constants.brownianAmplitude > 0) {\n      constants.brownianAmplitude -= constants.brownianAmplitudeChangePerPress;\n    }\n    console.log(constants.brownianAmplitude);\n    break;\n  default:\n    console.log(event.code);\n    break;\n  }\n})\n\nlet circles\nfunction init() {\n  restartingSimulation = false;\n  clearTimeout(restartSimulationHandle);\n\n  context.clearRect(0, 0, canvas.width, canvas.height)\n\n  circles = []\n  switch (constants.spawnMode) {\n    case \"cluster\": {\n      console.log(\"Spawning cluster\")\n      const k = 30\n      const dimensions = 2\n      const myPoisson = new PoissonDisc(canvas.width - constants.padding * 2, canvas.height - constants.padding * 2, constants.placementRadius, k, dimensions);\n      myPoisson.run()\n\n      circles = myPoisson.points.map((point) => {\n        let hue = Math.round(Math.random() * 360);\n        return new Circle(context, hue, point.px + constants.padding, point.py + constants.padding, canvas.width, canvas.height)\n      });\n    }\n    break;\n    case \"groups\": {\n      console.log(\"Spawning groups\")\n      const k = 30\n      const dimensions = 2\n      const myPoisson = new PoissonDisc(canvas.width - constants.padding * 2, canvas.height - constants.padding * 2, constants.placementRadius, k, dimensions);\n      myPoisson.run()\n\n      circles = myPoisson.points.map((point) => {\n        let groupNumber = Math.floor(Math.random() * 3);\n        let hue = (Math.floor(Math.random() * 60)) + groupNumber * 120;\n\n        return new Circle(context, hue, point.px + constants.padding, point.py + constants.padding, canvas.width, canvas.height)\n      });\n    }\n    break;\n    case \"single\": {\n      console.log(\"Spawning single\")\n      circles.push(new Circle(context, Math.round(Math.random() * 360), canvas.width / 2, canvas.height / 2, canvas.width, canvas.height))\n    }\n    break;\n    case \"double\": {\n      console.log(\"Spawning double\")\n      circles.push(new Circle(context, Math.round(Math.random() * 360), canvas.width / 3, canvas.height / 2, canvas.width, canvas.height)) \n      circles.push(new Circle(context, Math.round(Math.random() * 360), canvas.width - canvas.width / 3, canvas.height / 2, canvas.width, canvas.height))\n    }\n    break;\n  }\n  circles.forEach(circle => {\n    circle.draw()\n  })\n}\n\nlet previousFrameTime = 0;\nfunction animate(time) {\n  requestAnimationFrame(animate)\n\n  let deltaTime = time - previousFrameTime;\n  previousFrameTime = time;\n\n  if (deltaTime > 15) {\n    deltaTime = 15\n  }\n\n  deltaTime /= 1000;\n  deltaTime *= constants.simulationSpeed;\n\n  if (stepAnimation) {\n    stepAnimation = false;\n  } else if (!runAnimation) {\n    return\n  }\n\n  context.clearRect(0, 0, canvas.width, canvas.height)\n\n  circles.forEach(circle => {\n    circle.calculateNewPosition(deltaTime, circles)\n    circle.update()\n    circle.draw()\n  })\n\n  if (circles.every(circle => circle.isInert())) {\n    // Restart the simulation\n    restartSimulation()\n  }\n}\n\nfunction restartSimulation() {\n  if (constants.restartMode == \"off\") {\n    return;\n  }\n\n  if (restartingSimulation) {\n    return;\n  }\n\n  console.log(\"Restarting in 1 second\");\n\n  restartingSimulation = true;\n  restartSimulationHandle = setTimeout(init, 1 * 1000)\n}\n\ninit()\nrequestAnimationFrame(animate)\n","import constants from './constants.js'\nimport randomScale from './utils/randomScale.js'\n\nexport default class Circle {\n  constructor(context, hue, x, y, canvasWidth, canvasHeight) {\n    this.context = context\n    this.x = x\n    this.y = y\n    this.radius = constants.circleRadius\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.hue = hue;\n    this.color = \"hsl(\" + this.hue + \", 100%, 50%)\"\n    this.speed = {x: 0, y: 0};\n\n    this.deleted = false\n  }\n\n  draw() {\n    this.context.beginPath()\n    this.context.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false)\n    this.context.fillStyle = this.color\n    this.context.fill()\n    this.context.closePath()\n  }\n\n  calculateNewPosition(deltaTime, circles) {\n    let accelerationFromCircles = circles\n      .filter((circle) => circle != this && !circle.deleted)\n      .map((circle) => this.calculateAccelerationFromCircle(circle))\n      .reduce((acc, item) => ({x: acc.x + item.x, y: acc.y + item.y}), {x: 0, y: 0})\n\n    let accelerationFromBorder = this.calculateRepulsionFromBorder()\n\n    let brownianX = constants.brownianAmplitude * randomScale();\n    let brownianY = constants.brownianAmplitude * randomScale();\n\n    this.speed.x += accelerationFromCircles.x + accelerationFromBorder.x + brownianX - this.speed.x * constants.friction;\n    this.speed.y += accelerationFromCircles.y + accelerationFromBorder.y + brownianY - this.speed.y * constants.friction;\n\n    this.newX = this.x + this.speed.x * deltaTime;\n    this.newY = this.y + this.speed.y * deltaTime;\n  }\n\n  update() {\n    if (this.deleted) {\n      return\n    }\n\n    this.x = this.newX\n    this.y = this.newY\n  }\n\n  isInert() {\n    return Math.sqrt(this.speed.x * this.speed.x + this.speed.y * this.speed.y) <= constants.inertThreshold;\n  }\n\n  calculateAccelerationFromCircle(circle) {\n    if (circle == this) {\n      return\n    }\n\n    let repulsion = this.calculateRepulsionFromCircle(circle)\n    let attraction = this.calculateAttractionToCircle(circle)\n    let direction = this.calculateDirectionToCircle(circle)\n\n    return {x: direction.x * (attraction - repulsion), y: direction.y * (attraction - repulsion)}\n  }\n\n  calculateDistanceToCircle(circle) {\n    let deltaX = circle.x - this.x\n    let deltaY = circle.y - this.y\n    return Math.sqrt(deltaX * deltaX + deltaY * deltaY)\n  }\n\n  calculateDirectionToCircle(circle) {\n    let distance = this.calculateDistanceToCircle(circle)\n\n    return {\n      x: (circle.x - this.x) / distance,\n      y: (circle.y - this.y) / distance\n    }\n  }\n\n  calculateRepulsionFromBorder() {\n    let acceleration = {x: 0, y: 0}\n\n    acceleration.x = this.calculateRepulsionFromDistance(Math.max(Math.min(this.x, this.canvasWidth - this.x), 0)) * ((this.x > this.canvasWidth / 2) ? -1 : 1)\n    acceleration.y = this.calculateRepulsionFromDistance(Math.max(Math.min(this.y, this.canvasHeight - this.y), 0)) * ((this.y > this.canvasHeight / 2) ? -1 : 1)\n\n    return acceleration\n  }\n\n  calculateRepulsionFromCircle(circle) {\n    let distance = this.calculateDistanceToCircle(circle);\n    return this.calculateRepulsionFromDistance(distance);\n  }\n\n  calculateRepulsionFromDistance(distance) {\n    return Math.exp(-distance / constants.repulsionScale) * constants.repulsionAmplitude\n  }\n\n  calculateAttractionToCircle(circle) {\n    let distance = this.calculateDistanceToCircle(circle)\n    let deltaHue = Math.min(Math.abs(this.hue - circle.hue), 360 - Math.abs(this.hue - circle.hue));\n    let deltaHueFactor = 1 - deltaHue / 180 * constants.groupingIntensity;\n    let attractionFactor = Math.exp(-(1 - deltaHueFactor) * (1 - deltaHueFactor));\n    return (distance - constants.attractionXOffset) / Math.exp(distance / constants.attractionScale) * constants.attractionAmplitude * attractionFactor + constants.attractionYOffset;\n  }\n}\n","export default {\n\tspawnMode: \"cluster\",\n\trestartMode: \"on\",\n\tinitialRunAnimation: true,\n\tsimulationSpeed: 1,\n\n\tcircleRadius: 5,\n\tplacementRadius: 35,\n\tpadding: 200,\n\tinertThreshold: 5,\n\n\trepulsionAmplitude: 1000,\n\trepulsionScale: 20,\n\n\tattractionScale: 90,\n\tattractionAmplitude: 1,\n\tattractionXOffset: 20,\n\tattractionYOffset: -0.01,\n\n\tfriction: 0.6,\n\n\tbrownianAmplitude: 0,\n\tbrownianAmplitudeChangePerPress: 50,\n\n\tgroupingIntensity: 5\n}","/**\r\n * A Poisson Disc Sampling routine - randomly but evenly place dots on the screen..\r\n *\r\n * @property {Number} width - Width of the display in pixels\r\n * @property {Number} height - Height of the display in pixels\r\n * @property {Number} r - The minimum distance between points\r\n * @property {Number} k - Number of tries to make a new point before giving up\r\n * @property {Number} n - n-dimensional grid\r\n * @property {Number} cellSize - The size of the grid cell = r / sqrt(n)\r\n * @property {Number} cols - Number of columns in the grid\r\n * @property {Number} rows - Number of rows in the grid\r\n * @property {Object[]} points - Array of points already plotted\r\n * @property {Number[]} active - Array of active points indices\r\n * @property {Number[]} grid - Grid array of point indices\r\n * @author Matthew Page <work@mjp.co>\r\n */\r\nexport default class PoissonDisc {\r\n\t/**\r\n\t * Create a new disc sampler\r\n\t *\r\n\t * @param {Number} w - Width of the display in pixels\r\n\t * @param {Number} h - Height of the display in pixels\r\n\t * @param {Number} r - The minimum distance between points\r\n\t * @param {Number} k - Number of tries to make a new point before giving up\r\n\t * @param {Number} n - n-dimensional grid\r\n\t */\t\r\n\tconstructor(w, h, r, k, n) {\t\r\n\t\tthis.width = w;\r\n\t\tthis.height = h;\r\n\t\tthis.r = r;\r\n\t\tthis.k = k;\r\n\t\tthis.n = n;\r\n\t\tthis.cellSize = Math.floor(this.r / Math.sqrt(this.n));\r\n\t\tthis.cols = Math.floor(this.width / this.cellSize);\r\n\t\tthis.rows = Math.floor(this.height / this.cellSize);\r\n\t\tthis.points = [];\r\n\t\tthis.active = [];\r\n\t\tthis.grid = [];\r\n\t\tthis.reset();\r\n\t}\r\n\t/**\r\n\t * Reset the algorithm and data\r\n\t */\r\n\treset() {\r\n\t\tthis.points = [];\r\n\t\tthis.active = [];\r\n\t\tthis.grid = [];\t\r\n\t\tthis.initialiseGrid();\r\n\t\tthis.addPoint(this.getRandom(0, this.width), this.getRandom(0, this.height));\t\t\r\n\t}\r\n\t/**\r\n\t * Run the algorithm till the end\r\n\t */\r\n\trun() {\r\n\t\tthis.reset();\r\n\t\twhile(this.active.length > 0) {\r\n\t\t\tthis.step(1);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Take a single or n steps through the algorithm\r\n\t */\r\n\tstep(n) {\r\n\t\t\r\n\t\t/* Take one or 'n' steps */\r\n\t\tfor(let l=0; l<n; l+=1) {\r\n\t\r\n\t\t\t/* While there are still active points */\r\n\t\t\tif(this.active.length > 0) {\r\n\r\n\t\t\t\t/* Get a random point from the Active list */\r\n\t\t\t\tlet randomActive = this.getRandom(0, this.active.length);\r\n\t\t\t\tlet currentPoint = this.points[this.active[randomActive]];\r\n\r\n\t\t\t\t/* Track if we manage to find a new point from this one */\r\n\t\t\t\tlet foundNewPoint = false;\r\n\r\n\t\t\t\t/* Generate up to k points randomly between r and 2r */\r\n\t\t\t\tfor(let tries = 0; tries < this.k; tries+=1) {\r\n\r\n\t\t\t\t\t/* Is the new point valid, start assuming it is */\r\n\t\t\t\t\tlet pointValid = true;\r\n\r\n\t\t\t\t\t/* Uniformly distribute the angle or random, not clear in the docs */\r\n\t\t\t\t\tlet newAngle = Math.floor(Math.random()*(Math.PI*2))\r\n\t\t\t\t\t\r\n\t\t\t\t\t/* Get a random distance r to 2r */\r\n\t\t\t\t\tlet newDist = this.getRandom(this.r, this.r*2);\r\n\r\n\t\t\t\t\t/* Calculate the new position */\r\n\t\t\t\t\tlet offsetX = Math.cos(newAngle)*newDist;\r\n\t\t\t\t\tlet offsetY = Math.sin(newAngle)*newDist;\r\n\t\t\t\t\tlet newX = Math.floor(currentPoint.px + offsetX);\r\n\t\t\t\t\tlet newY = Math.floor(currentPoint.py + offsetY);\r\n\t\t\t\t\tlet newGridX = Math.floor(newX / this.cellSize);\r\n\t\t\t\t\tlet newGridY = Math.floor(newY / this.cellSize);\r\n\r\n\t\t\t\t\tif( ( newX > 0 ) && ( newX < this.width ) && ( newY > 0 ) && ( newY < this.height ) ) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t/* It is inside the screen area */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(this.grid[newGridY][newGridX] < 0) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t/* There is not a point at this grid reference - get the neighbours */\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor(let i=-1; i<=1; i++) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tfor(let j=-1; j<=1; j++) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t/* Each neighbour grid location */\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tlet neighbourGridX = newGridX+j;\r\n\t\t\t\t\t\t\t\t\tlet neighbourGridY = newGridY+i;\r\n\r\n\t\t\t\t\t\t\t\t\tif( ( neighbourGridX >= 0 ) && ( neighbourGridY >= 0 ) \r\n\t\t\t\t\t\t\t\t\t\t&& ( neighbourGridX <= this.cols ) && ( neighbourGridY <= this.rows ) \r\n\t\t\t\t\t\t\t\t\t\t&& (( neighbourGridX !== newGridX ) || ( neighbourGridY !== newGridY )) ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t/* Neighbour is within the grid and not the centre point */\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tif(this.grid[neighbourGridY][neighbourGridX] >= 0) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t/* It has a point in it - check how far away it is */\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tlet neighbourIndex = this.grid[neighbourGridY][neighbourGridX];\r\n\t\t\t\t\t\t\t\t\t\t\tlet neighbour = this.points[neighbourIndex];\r\n\t\t\t\t\t\t\t\t\t\t\tlet dist = Math.sqrt( ((newX - neighbour.px)*(newX - neighbour.px)) +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ((newY - neighbour.py)*(newY - neighbour.py)) );\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t/* Invalid, to close to a neighbour point */\r\n\t\t\t\t\t\t\t\t\t\t\tif(dist < this.r) pointValid = false;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t/* Invalid, there is already a point in this cell */\r\n\t\t\t\t\t\t\tpointValid = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t/* Invalid, point is outside the grid */\r\n\t\t\t\t\t\tpointValid = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(pointValid) {\r\n\t\t\t\t\t\t/* Valid, add this point */\r\n\t\t\t\t\t\tfoundNewPoint = true;\r\n\t\t\t\t\t\tthis.addPoint(newX, newY);\r\n\t\t\t\t\t} \r\n\t\t\t\t} // For tries...\r\n\t\t\t\t\r\n\t\t\t\tif(!foundNewPoint) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t/* Didn't find a new point after k tries - remove this point from Active list */\r\n\t\t\t\t\tthis.active.splice(randomActive, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} // n loop\r\n\t}\r\n\t/**\r\n\t * Add a new point to the points, grid and active arrays. Points array holds the\r\n\t * point data and grid / active hold indices to the points array.\r\n\t *\r\n\t * @param {Number} x - The pixel X position of the point\r\n\t * @param {Number} y - The pixel Y position of the point\r\n\t */\r\n\taddPoint(x, y) {\r\n\t\tlet point = { \r\n\t\t\tpx: parseInt(x),\r\n\t\t\tpy: parseInt(y),\r\n\t\t\tgx: Math.floor(parseInt(x) / this.cellSize),\r\n\t\t\tgy: Math.floor(parseInt(y) / this.cellSize),\r\n\t\t};\r\n\t\tlet pointIndex = this.points.length;\r\n\t\tthis.points.push(point);\t\t\r\n\t\tthis.grid[point.gy][point.gx] = pointIndex;\r\n\t\tthis.active.push(pointIndex);\r\n\t}\r\n\t/**\r\n\t * Initialise the empty background grid array \r\n\t */\r\n\tinitialiseGrid() {\r\n\t\tfor(let y = 0; y <= this.rows; y+=1) {\r\n\t\t\tthis.grid[y] = [];\r\n\t\t\tfor(let x = 0; x <= this.cols; x+=1) {\r\n\t\t\t\tthis.grid[y][x] = -1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Get a random integar between min and max\r\n\t *\r\n\t * @param {Number} min - The minimum value\r\n\t * @param {Number} max - The maximum value\r\n\t * @returns {Number} Random number from min to max\r\n\t */\r\n\tgetRandom(min, max) {\r\n\t\treturn Math.floor(Math.random()*(max-min))+min;\r\n\t}\r\n}\r\n","export default function randomScale() {\n\treturn Math.random() * 2 - 1;\n}"],"sourceRoot":""}