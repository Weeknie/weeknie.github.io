{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/canvas.js","webpack:///./src/js/circle.js","webpack:///./src/js/constants.js","webpack:///./src/js/utils/poissonDisc.js"],"names":["console","log","stepAnimation","runAnimation","constants","initialRunAnimation","canvas","document","querySelector","context","getContext","width","window","innerWidth","height","innerHeight","addEventListener","init","event","code","circles","clearRect","k","dimensions","myPoisson","PoissonDisc","padding","placementRadius","run","points","map","point","Circle","px","py","forEach","circle","draw","previousFrameTime","animate","time","requestAnimationFrame","deltaTime","calculateNewPosition","update","every","isInert","x","y","canvasWidth","canvasHeight","radius","circleRadius","hue","Math","round","random","color","speed","initialSpeed","deleted","beginPath","arc","PI","fillStyle","fill","closePath","accelerationFromCircles","filter","calculateAccelerationFromCircle","reduce","acc","item","accelerationFromBorder","calculateRepulsionFromBorder","friction","newX","newY","sqrt","inertThreshold","repulsion","calculateRepulsionFromCircle","attraction","calculateAttractionToCircle","direction","calculateDirectionToCircle","deltaX","deltaY","distance","calculateDistanceToCircle","acceleration","calculateRepulsionFromDistance","max","min","exp","repulsionScale","repulsionAmplitude","deltaHue","abs","deltaHueFactor","attractionFactor","attractionOffset","attractionScale","attractionAmplitude","w","h","r","n","cellSize","floor","cols","rows","active","grid","reset","initialiseGrid","addPoint","getRandom","length","step","l","randomActive","currentPoint","foundNewPoint","tries","pointValid","newAngle","newDist","offsetX","cos","offsetY","sin","newGridX","newGridY","i","j","neighbourGridX","neighbourGridY","neighbourIndex","neighbour","dist","splice","parseInt","gx","gy","pointIndex","push"],"mappings":"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","file":"./js/canvas.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/canvas.js\");\n","import constants from './constants'\n\nimport Circle from './circle'\nimport PoissonDisc from './utils/poissonDisc'\n\nconsole.log('Version 0.4')\n\nlet stepAnimation = false\nlet runAnimation = constants.initialRunAnimation\n\nconst canvas = document.querySelector('canvas')\nconst context = canvas.getContext('2d')\n\ncanvas.width = window.innerWidth\ncanvas.height = window.innerHeight\n\naddEventListener('resize', () => {\n  canvas.width = window.innerWidth\n  canvas.height = window.innerHeight\n\n  init()\n})\n\naddEventListener('keypress', (event) => {\n  switch (event.code) {\n  case 'Space':\n    stepAnimation = true\n    break;\n  case 'KeyP':\n    runAnimation = !runAnimation;\n    break;\n  case 'KeyR':\n    init();\n    break;\n  }\n})\n\nlet circles\nfunction init() {\n  context.clearRect(0, 0, canvas.width, canvas.height)\n\n  let k = 30\n  let dimensions = 2\n  let myPoisson = new PoissonDisc(canvas.width - constants.padding * 2, canvas.height - constants.padding * 2, constants.placementRadius, k, dimensions);\n  myPoisson.run()\n\n  circles = []\n  // circles.push(new Circle(context, canvas.width / 2, canvas.height / 2, canvas.width, canvas.height))\n  circles = myPoisson.points.map((point) => new Circle(context, point.px + constants.padding, point.py + constants.padding, canvas.width, canvas.height))\n\n  circles.forEach(circle => {\n    circle.draw()\n  })\n}\n\nlet previousFrameTime = 0;\nfunction animate(time) {\n  requestAnimationFrame(animate)\n\n  let deltaTime = time - previousFrameTime;\n  previousFrameTime = time;\n\n  if (deltaTime > 15) {\n    deltaTime = 15\n  }\n\n  if (stepAnimation) {\n    stepAnimation = false;\n  } else if (!runAnimation) {\n    return\n  }\n\n  context.clearRect(0, 0, canvas.width, canvas.height)\n\n  circles.forEach(circle => {\n    circle.calculateNewPosition(deltaTime, circles)\n    circle.update()\n    circle.draw()\n  })\n\n  if (circles.every(circle => circle.isInert())) {\n    // Restart the simulation\n    init()\n  }\n}\n\ninit()\nrequestAnimationFrame(animate)\n","import constants from './constants.js'\r\n\r\nexport default class Circle {\r\n  constructor(context, x, y, canvasWidth, canvasHeight) {\r\n    this.context = context\r\n    this.x = x\r\n    this.y = y\r\n    this.radius = constants.circleRadius  \r\n    this.canvasWidth = canvasWidth\r\n    this.canvasHeight = canvasHeight\r\n    this.hue = Math.round(Math.random() * 360);\r\n    this.color = \"hsl(\" + this.hue + \", 100%, 50%)\"\r\n    this.speed = {x: (Math.random() * 2 - 1) * constants.initialSpeed, y: (Math.random() * 2 - 1) * constants.initialSpeed}\r\n\r\n    this.deleted = false\r\n  }\r\n\r\n  draw() {\r\n    this.context.beginPath()\r\n    this.context.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false)\r\n    this.context.fillStyle = this.color\r\n    this.context.fill()\r\n    this.context.closePath()\r\n  }\r\n\r\n  calculateNewPosition(deltaTime, circles) {\r\n    let accelerationFromCircles = circles\r\n      .filter((circle) => circle != this && !circle.deleted)\r\n      .map((circle) => this.calculateAccelerationFromCircle(circle))\r\n      .reduce((acc, item) => ({x: acc.x + item.x, y: acc.y + item.y}), {x: 0, y: 0})\r\n\r\n    let accelerationFromBorder = this.calculateRepulsionFromBorder()\r\n\r\n    this.speed.x += (accelerationFromCircles.x + accelerationFromBorder.x - this.speed.x * constants.friction)\r\n    this.speed.y += (accelerationFromCircles.y + accelerationFromBorder.y - this.speed.y * constants.friction)\r\n\r\n    this.newX = this.x + this.speed.x * deltaTime / 1000\r\n    this.newY = this.y + this.speed.y * deltaTime / 1000\r\n  }\r\n\r\n  update() {\r\n    if (this.deleted) {\r\n      return\r\n    }\r\n\r\n    this.x = this.newX\r\n    this.y = this.newY\r\n  }\r\n\r\n  isInert() {\r\n    return Math.sqrt(this.speed.x * this.speed.x + this.speed.y * this.speed.y) <= constants.inertThreshold;\r\n  }\r\n\r\n  calculateAccelerationFromCircle(circle) {\r\n    if (circle == this) {\r\n      return\r\n    }\r\n\r\n    let repulsion = this.calculateRepulsionFromCircle(circle)\r\n    let attraction = this.calculateAttractionToCircle(circle)\r\n    let direction = this.calculateDirectionToCircle(circle)\r\n\r\n    return {x: direction.x * (attraction - repulsion), y: direction.y * (attraction - repulsion)}\r\n  }\r\n\r\n  calculateDistanceToCircle(circle) {\r\n    let deltaX = circle.x - this.x\r\n    let deltaY = circle.y - this.y\r\n    return Math.sqrt(deltaX * deltaX + deltaY * deltaY)\r\n  }\r\n\r\n  calculateDirectionToCircle(circle) {\r\n    let distance = this.calculateDistanceToCircle(circle)\r\n\r\n    return {\r\n      x: (circle.x - this.x) / distance,\r\n      y: (circle.y - this.y) / distance\r\n    }\r\n  }\r\n\r\n  calculateRepulsionFromBorder() {\r\n    let acceleration = {x: 0, y: 0}\r\n\r\n    acceleration.x = this.calculateRepulsionFromDistance(Math.max(Math.min(this.x, this.canvasWidth - this.x), 0)) * ((this.x > this.canvasWidth / 2) ? -1 : 1)\r\n    acceleration.y = this.calculateRepulsionFromDistance(Math.max(Math.min(this.y, this.canvasHeight - this.y), 0)) * ((this.y > this.canvasHeight / 2) ? -1 : 1)\r\n\r\n    return acceleration\r\n  }\r\n\r\n  calculateRepulsionFromCircle(circle) {\r\n    let distance = this.calculateDistanceToCircle(circle);\r\n    return this.calculateRepulsionFromDistance(distance);\r\n  }\r\n\r\n  calculateRepulsionFromDistance(distance) {\r\n    return Math.exp(-distance / constants.repulsionScale) * constants.repulsionAmplitude\r\n  }\r\n\r\n  calculateAttractionToCircle(circle) {\r\n    let distance = this.calculateDistanceToCircle(circle)\r\n    let deltaHue = Math.min(Math.abs(this.hue - circle.hue), 360 - Math.abs(this.hue - circle.hue));\r\n    let deltaHueFactor = 1 - deltaHue / 180;\r\n    let attractionFactor = deltaHueFactor;\r\n    return (distance - constants.attractionOffset) / Math.exp(distance / constants.attractionScale) * constants.attractionAmplitude * attractionFactor;\r\n  }\r\n}\r\n","export default {\n\tinitialRunAnimation: true,\n\tcircleRadius: 10,\n\tplacementRadius: 40,\n\tpadding: 200,\n\tinitialSpeed: 0,\n\trepulsionAmplitude: 1000,\n\trepulsionScale: 20,\n\tattractionScale: 90,\n\tattractionAmplitude: 0.15,\n\tattractionOffset: 20,\n\tfriction: 0.22,\n\tinertThreshold: 1\n}","/**\r\n * A Poisson Disc Sampling routine - randomly but evenly place dots on the screen..\r\n *\r\n * @property {Number} width - Width of the display in pixels\r\n * @property {Number} height - Height of the display in pixels\r\n * @property {Number} r - The minimum distance between points\r\n * @property {Number} k - Number of tries to make a new point before giving up\r\n * @property {Number} n - n-dimensional grid\r\n * @property {Number} cellSize - The size of the grid cell = r / sqrt(n)\r\n * @property {Number} cols - Number of columns in the grid\r\n * @property {Number} rows - Number of rows in the grid\r\n * @property {Object[]} points - Array of points already plotted\r\n * @property {Number[]} active - Array of active points indices\r\n * @property {Number[]} grid - Grid array of point indices\r\n * @author Matthew Page <work@mjp.co>\r\n */\r\nexport default class PoissonDisc {\r\n\t/**\r\n\t * Create a new disc sampler\r\n\t *\r\n\t * @param {Number} w - Width of the display in pixels\r\n\t * @param {Number} h - Height of the display in pixels\r\n\t * @param {Number} r - The minimum distance between points\r\n\t * @param {Number} k - Number of tries to make a new point before giving up\r\n\t * @param {Number} n - n-dimensional grid\r\n\t */\t\r\n\tconstructor(w, h, r, k, n) {\t\r\n\t\tthis.width = w;\r\n\t\tthis.height = h;\r\n\t\tthis.r = r;\r\n\t\tthis.k = k;\r\n\t\tthis.n = n;\r\n\t\tthis.cellSize = Math.floor(this.r / Math.sqrt(this.n));\r\n\t\tthis.cols = Math.floor(this.width / this.cellSize);\r\n\t\tthis.rows = Math.floor(this.height / this.cellSize);\r\n\t\tthis.points = [];\r\n\t\tthis.active = [];\r\n\t\tthis.grid = [];\r\n\t\tthis.reset();\r\n\t}\r\n\t/**\r\n\t * Reset the algorithm and data\r\n\t */\r\n\treset() {\r\n\t\tthis.points = [];\r\n\t\tthis.active = [];\r\n\t\tthis.grid = [];\t\r\n\t\tthis.initialiseGrid();\r\n\t\tthis.addPoint(this.getRandom(0, this.width), this.getRandom(0, this.height));\t\t\r\n\t}\r\n\t/**\r\n\t * Run the algorithm till the end\r\n\t */\r\n\trun() {\r\n\t\tthis.reset();\r\n\t\twhile(this.active.length > 0) {\r\n\t\t\tthis.step(1);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Take a single or n steps through the algorithm\r\n\t */\r\n\tstep(n) {\r\n\t\t\r\n\t\t/* Take one or 'n' steps */\r\n\t\tfor(let l=0; l<n; l+=1) {\r\n\t\r\n\t\t\t/* While there are still active points */\r\n\t\t\tif(this.active.length > 0) {\r\n\r\n\t\t\t\t/* Get a random point from the Active list */\r\n\t\t\t\tlet randomActive = this.getRandom(0, this.active.length);\r\n\t\t\t\tlet currentPoint = this.points[this.active[randomActive]];\r\n\r\n\t\t\t\t/* Track if we manage to find a new point from this one */\r\n\t\t\t\tlet foundNewPoint = false;\r\n\r\n\t\t\t\t/* Generate up to k points randomly between r and 2r */\r\n\t\t\t\tfor(let tries = 0; tries < this.k; tries+=1) {\r\n\r\n\t\t\t\t\t/* Is the new point valid, start assuming it is */\r\n\t\t\t\t\tlet pointValid = true;\r\n\r\n\t\t\t\t\t/* Uniformly distribute the angle or random, not clear in the docs */\r\n\t\t\t\t\tlet newAngle = Math.floor(Math.random()*(Math.PI*2))\r\n\t\t\t\t\t\r\n\t\t\t\t\t/* Get a random distance r to 2r */\r\n\t\t\t\t\tlet newDist = this.getRandom(this.r, this.r*2);\r\n\r\n\t\t\t\t\t/* Calculate the new position */\r\n\t\t\t\t\tlet offsetX = Math.cos(newAngle)*newDist;\r\n\t\t\t\t\tlet offsetY = Math.sin(newAngle)*newDist;\r\n\t\t\t\t\tlet newX = Math.floor(currentPoint.px + offsetX);\r\n\t\t\t\t\tlet newY = Math.floor(currentPoint.py + offsetY);\r\n\t\t\t\t\tlet newGridX = Math.floor(newX / this.cellSize);\r\n\t\t\t\t\tlet newGridY = Math.floor(newY / this.cellSize);\r\n\r\n\t\t\t\t\tif( ( newX > 0 ) && ( newX < this.width ) && ( newY > 0 ) && ( newY < this.height ) ) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t/* It is inside the screen area */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(this.grid[newGridY][newGridX] < 0) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t/* There is not a point at this grid reference - get the neighbours */\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor(let i=-1; i<=1; i++) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tfor(let j=-1; j<=1; j++) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t/* Each neighbour grid location */\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tlet neighbourGridX = newGridX+j;\r\n\t\t\t\t\t\t\t\t\tlet neighbourGridY = newGridY+i;\r\n\r\n\t\t\t\t\t\t\t\t\tif( ( neighbourGridX >= 0 ) && ( neighbourGridY >= 0 ) \r\n\t\t\t\t\t\t\t\t\t\t&& ( neighbourGridX <= this.cols ) && ( neighbourGridY <= this.rows ) \r\n\t\t\t\t\t\t\t\t\t\t&& (( neighbourGridX !== newGridX ) || ( neighbourGridY !== newGridY )) ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t/* Neighbour is within the grid and not the centre point */\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tif(this.grid[neighbourGridY][neighbourGridX] >= 0) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t/* It has a point in it - check how far away it is */\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tlet neighbourIndex = this.grid[neighbourGridY][neighbourGridX];\r\n\t\t\t\t\t\t\t\t\t\t\tlet neighbour = this.points[neighbourIndex];\r\n\t\t\t\t\t\t\t\t\t\t\tlet dist = Math.sqrt( ((newX - neighbour.px)*(newX - neighbour.px)) +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ((newY - neighbour.py)*(newY - neighbour.py)) );\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t/* Invalid, to close to a neighbour point */\r\n\t\t\t\t\t\t\t\t\t\t\tif(dist < this.r) pointValid = false;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t/* Invalid, there is already a point in this cell */\r\n\t\t\t\t\t\t\tpointValid = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t/* Invalid, point is outside the grid */\r\n\t\t\t\t\t\tpointValid = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(pointValid) {\r\n\t\t\t\t\t\t/* Valid, add this point */\r\n\t\t\t\t\t\tfoundNewPoint = true;\r\n\t\t\t\t\t\tthis.addPoint(newX, newY);\r\n\t\t\t\t\t} \r\n\t\t\t\t} // For tries...\r\n\t\t\t\t\r\n\t\t\t\tif(!foundNewPoint) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t/* Didn't find a new point after k tries - remove this point from Active list */\r\n\t\t\t\t\tthis.active.splice(randomActive, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} // n loop\r\n\t}\r\n\t/**\r\n\t * Add a new point to the points, grid and active arrays. Points array holds the\r\n\t * point data and grid / active hold indices to the points array.\r\n\t *\r\n\t * @param {Number} x - The pixel X position of the point\r\n\t * @param {Number} y - The pixel Y position of the point\r\n\t */\r\n\taddPoint(x, y) {\r\n\t\tlet point = { \r\n\t\t\tpx: parseInt(x),\r\n\t\t\tpy: parseInt(y),\r\n\t\t\tgx: Math.floor(parseInt(x) / this.cellSize),\r\n\t\t\tgy: Math.floor(parseInt(y) / this.cellSize),\r\n\t\t};\r\n\t\tlet pointIndex = this.points.length;\r\n\t\tthis.points.push(point);\t\t\r\n\t\tthis.grid[point.gy][point.gx] = pointIndex;\r\n\t\tthis.active.push(pointIndex);\r\n\t}\r\n\t/**\r\n\t * Initialise the empty background grid array \r\n\t */\r\n\tinitialiseGrid() {\r\n\t\tfor(let y = 0; y <= this.rows; y+=1) {\r\n\t\t\tthis.grid[y] = [];\r\n\t\t\tfor(let x = 0; x <= this.cols; x+=1) {\r\n\t\t\t\tthis.grid[y][x] = -1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Get a random integar between min and max\r\n\t *\r\n\t * @param {Number} min - The minimum value\r\n\t * @param {Number} max - The maximum value\r\n\t * @returns {Number} Random number from min to max\r\n\t */\r\n\tgetRandom(min, max) {\r\n\t\treturn Math.floor(Math.random()*(max-min))+min;\r\n\t}\r\n}\r\n"],"sourceRoot":""}